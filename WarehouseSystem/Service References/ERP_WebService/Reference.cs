//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18408
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseSystem.ERP_WebService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ERP_WebService.ERPWebServiceSoap")]
    public interface ERPWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockInData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStockInData(string StockIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockInData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStockInDataAsync(string StockIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockInDataByPallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStockInDataByPallet(string palletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockInDataByPallet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStockInDataByPalletAsync(string palletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NoUsePlateNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet NoUsePlateNo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NoUsePlateNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> NoUsePlateNoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Login(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> LoginAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockOutData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStockOutData(string StockOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockOutData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStockOutDataAsync(string StockOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClearPalletDataByPallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ClearPalletDataByPallet(string palletNumber, string palletRFID, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClearPalletDataByPallet", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ClearPalletDataByPalletAsync(string palletNumber, string palletRFID, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStockInData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetStockInData(string[] Lot, string PalletNo, string PalletRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStockInData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetStockInDataAsync(string[] Lot, string PalletNo, string PalletRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStockOutData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetStockOutData(string[] Lot, string PalletNo, string PalletRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStockOutData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetStockOutDataAsync(string[] Lot, string PalletNo, string PalletRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPalletByLot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPalletByLot(string[] Lot, string PalletNo, string PalletRFID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPalletByLot", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetPalletByLotAsync(string[] Lot, string PalletNo, string PalletRFID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStorageByPallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetStorageByPallet(string[] PalletNo, string[] PalletRFID, string Storage, string StorageRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetStorageByPallet", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetStorageByPalletAsync(string[] PalletNo, string[] PalletRFID, string Storage, string StorageRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInventoryData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInventoryDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotDataByStockIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLotDataByStockIn(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotDataByStockIn", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataByStockInAsync(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotDataByStockOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLotDataByStockOut(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotDataByStockOut", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataByStockOutAsync(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLotData(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLotData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataAsync(string RFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLotData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLotData(string Lot, string LotRFID, string PalletNo, string PalletRFID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLotData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetLotDataAsync(string Lot, string LotRFID, string PalletNo, string PalletRFID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ERPWebServiceSoapChannel : WarehouseSystem.ERP_WebService.ERPWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ERPWebServiceSoapClient : System.ServiceModel.ClientBase<WarehouseSystem.ERP_WebService.ERPWebServiceSoap>, WarehouseSystem.ERP_WebService.ERPWebServiceSoap {
        
        public ERPWebServiceSoapClient() {
        }
        
        public ERPWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ERPWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ERPWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ERPWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetStockInData(string StockIn) {
            return base.Channel.GetStockInData(StockIn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStockInDataAsync(string StockIn) {
            return base.Channel.GetStockInDataAsync(StockIn);
        }
        
        public System.Data.DataSet GetStockInDataByPallet(string palletNo) {
            return base.Channel.GetStockInDataByPallet(palletNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStockInDataByPalletAsync(string palletNo) {
            return base.Channel.GetStockInDataByPalletAsync(palletNo);
        }
        
        public System.Data.DataSet NoUsePlateNo() {
            return base.Channel.NoUsePlateNo();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> NoUsePlateNoAsync() {
            return base.Channel.NoUsePlateNoAsync();
        }
        
        public bool Login(string UserID, string Password) {
            return base.Channel.Login(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string UserID, string Password) {
            return base.Channel.LoginAsync(UserID, Password);
        }
        
        public System.Data.DataSet GetStockOutData(string StockOut) {
            return base.Channel.GetStockOutData(StockOut);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStockOutDataAsync(string StockOut) {
            return base.Channel.GetStockOutDataAsync(StockOut);
        }
        
        public bool ClearPalletDataByPallet(string palletNumber, string palletRFID, string userID) {
            return base.Channel.ClearPalletDataByPallet(palletNumber, palletRFID, userID);
        }
        
        public System.Threading.Tasks.Task<bool> ClearPalletDataByPalletAsync(string palletNumber, string palletRFID, string userID) {
            return base.Channel.ClearPalletDataByPalletAsync(palletNumber, palletRFID, userID);
        }
        
        public bool SetStockInData(string[] Lot, string PalletNo, string PalletRFID) {
            return base.Channel.SetStockInData(Lot, PalletNo, PalletRFID);
        }
        
        public System.Threading.Tasks.Task<bool> SetStockInDataAsync(string[] Lot, string PalletNo, string PalletRFID) {
            return base.Channel.SetStockInDataAsync(Lot, PalletNo, PalletRFID);
        }
        
        public bool SetStockOutData(string[] Lot, string PalletNo, string PalletRFID) {
            return base.Channel.SetStockOutData(Lot, PalletNo, PalletRFID);
        }
        
        public System.Threading.Tasks.Task<bool> SetStockOutDataAsync(string[] Lot, string PalletNo, string PalletRFID) {
            return base.Channel.SetStockOutDataAsync(Lot, PalletNo, PalletRFID);
        }
        
        public bool SetPalletByLot(string[] Lot, string PalletNo, string PalletRFID, string UserID) {
            return base.Channel.SetPalletByLot(Lot, PalletNo, PalletRFID, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> SetPalletByLotAsync(string[] Lot, string PalletNo, string PalletRFID, string UserID) {
            return base.Channel.SetPalletByLotAsync(Lot, PalletNo, PalletRFID, UserID);
        }
        
        public bool SetStorageByPallet(string[] PalletNo, string[] PalletRFID, string Storage, string StorageRFID) {
            return base.Channel.SetStorageByPallet(PalletNo, PalletRFID, Storage, StorageRFID);
        }
        
        public System.Threading.Tasks.Task<bool> SetStorageByPalletAsync(string[] PalletNo, string[] PalletRFID, string Storage, string StorageRFID) {
            return base.Channel.SetStorageByPalletAsync(PalletNo, PalletRFID, Storage, StorageRFID);
        }
        
        public System.Data.DataSet GetInventoryData() {
            return base.Channel.GetInventoryData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInventoryDataAsync() {
            return base.Channel.GetInventoryDataAsync();
        }
        
        public System.Data.DataSet GetLotDataByStockIn(string RFID) {
            return base.Channel.GetLotDataByStockIn(RFID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataByStockInAsync(string RFID) {
            return base.Channel.GetLotDataByStockInAsync(RFID);
        }
        
        public System.Data.DataSet GetLotDataByStockOut(string RFID) {
            return base.Channel.GetLotDataByStockOut(RFID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataByStockOutAsync(string RFID) {
            return base.Channel.GetLotDataByStockOutAsync(RFID);
        }
        
        public System.Data.DataSet GetLotData(string RFID) {
            return base.Channel.GetLotData(RFID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLotDataAsync(string RFID) {
            return base.Channel.GetLotDataAsync(RFID);
        }
        
        public bool SetLotData(string Lot, string LotRFID, string PalletNo, string PalletRFID) {
            return base.Channel.SetLotData(Lot, LotRFID, PalletNo, PalletRFID);
        }
        
        public System.Threading.Tasks.Task<bool> SetLotDataAsync(string Lot, string LotRFID, string PalletNo, string PalletRFID) {
            return base.Channel.SetLotDataAsync(Lot, LotRFID, PalletNo, PalletRFID);
        }
    }
}
