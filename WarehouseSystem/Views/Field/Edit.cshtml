@model WarehouseSystem.Models.ViewModel.FieldMapEditViewModel
@using WarehouseSystem.Models.ViewModel;

@{
    ViewBag.Title = "Edit";
}

<!-- GreenSock draggable -->
<script src="~/Scripts/TweenMax.min.js"></script>
<script src="~/Scripts/Draggable.min.js"></script>

<!-- Move and Resize tool -->
<script src="~/Scripts/d3.min.js"></script>
<script src="~/Scripts/rect.js"></script>

<script>

    var toDeleteBeaconId = '';

    function storeBeaconId(beaconId) { toDeleteBeaconId = beaconId; };

    var BEACON_RECEIVER = 1;
    var PARKING_BLOCK = 2;

    // define a json beacon draggable array
    //var beaconCoordinateArray = {};
    //var beaconDraggableArray = {};
    // variable to detect if any beacon on the  map is dragged
    var dragBeacon = false;
    var selectedBeaconId = '';

    var isSvgMouseUp = false;

    // map tool bar selected, mouse pointer is default
    var mapToolbarMenuSelected = 0;
    // map layer status
    var mapLayer = {'parkingBlock': true, 'beacon': true};

    /** start - map menu/tool operations **/
    // switch visibility of beacon layer
    function switchParkingBlockLayer() {
        mapLayer['parkingBlock'] = !mapLayer['parkingBlock'];
        if (mapLayer['parkingBlock']) {
            $('svg #parkingBlock_g').attr('visibility', 'visible');
        } else {
            $('svg #parkingBlock_g').attr('visibility', 'hidden');
        }
    };

    // select map menu
    function setMapToolbarMenu(selectedMenu) {
        mapToolbarMenuSelected = selectedMenu;
        reset();
        if (mapToolbarMenuSelected == 1) {
            // create a retangle instance
            new Rectangle();
        }
    };

    function showPropertyPanel(functionNumber) {
        // show parking block property panel
        if (functionNumber == PARKING_BLOCK) {
            $('#parkingBlockPanel').css('display', '');
            $('#ParkingBlockName')
                .editable('setValue', selectedParkingBlock.attr('ParkingBlockName'))
                .editable('option', 'pk', selectedParkingBlock.attr('id'));
            $('#StorageID')
                .editable('setValue', selectedParkingBlock.attr('StorageID'))
                .editable('option', 'pk', selectedParkingBlock.attr('id'));
        }
    };

    function hidePropertyPanel(parkingBlockId) {
        if (functionNumber == PARKING_BLOCK) {
            $('#parkingBlockPanel').css('display', 'none');
        }
    };

    // reset all
    function reset() {
        if (selectedBeaconId != '') {
            //console.log(2);
            unselectBeacon(selectedBeaconId);
        }
        // set delete button disabled
        //$('#deleteButton').attr('disabled', true);
    };

    function deleteObject() {
        if (selectedBeaconId != '') {
            // delete beacon
            storeBeaconId(selectedBeaconId);
            deleteBeaconFromServer();
        }
        if (selectedParkingBlock != null) {
            deleteParkingBlockFromServer();
        }
    };

    function convertToInteger(value) {
        return parseInt(value) | 0;
    };

    /** end - map menu/tool operations **/

    /** start - parkingBlock operations **/
    function addParkingBlockToServer(parkingBlockGraphicObject, X, Y, Width, Height) {
        // add new rect
        $.post('@Url.Content("~/ParkingBlock/Create")',
            {FieldID: '@Model.FieldMap.FieldID', X: X, Y: Y, Width: Width, Height: Height},
            function (data) {
                //console.log(data);
                parkingBlockGraphicObject.attr('id', data.ParkingBlockID);
                //parkingBlockGraphicObject.attr('StorageID', data.StorageID);
                //parkingBlockGraphicObject.attr('ParkingBlockName', data.ParkingBlockName);
                //createMapObjects(data);
            },
            'json'
        );
    }

    function updateParkingBlockRangeToServer(parkingBlockGraphicObject, X, Y, Width, Height) {
        //console.log(parkingBlockGraphicObject.attr('id'));
        // update rect
        $.post('@Url.Content("~/ParkingBlock/UpdateRange")',
            { ParkingBlockID: parkingBlockGraphicObject.attr('id'), X: X, Y: Y, Width: Width, Height: Height },
            function (data) {
                //console.log(data);
            }
        );
    }

    // delete a parking block
    function deleteParkingBlockFromServer() {
        // The DELETE method requests that the origin server delete the resource identified by the Request-URI.
        $.ajax({
            url: '@Url.Content("~/ParkingBlock/Delete")',
            data: $.param({ 'ParkingBlockID': selectedParkingBlock.attr('id') }),
            type: 'DELETE',
        }).done(function( msg ) {
            // remove parking block from UI
            selectedParkingBlock.remove();
            selectedParkingBlock = null;
        }).fail(function()  {
            alert("Sorry. Server unavailable. ");
        });
    }

    function setParkingBlockIdEditable() {
        $('#ParkingBlockName').editable({
            ajaxOptions: {
                dataType: 'json' //assuming json response
            },
            success: function (response, newValue) {
                selectedParkingBlock.attr('ParkingBlockName', newValue);
            }
        });
        $('#StorageID').editable({
            ajaxOptions: {
                dataType: 'json' //assuming json response
            },
            success: function (response, newValue) {
                selectedParkingBlock.attr('StorageID', newValue);
            }
        });
    };

    function addParkingBlockOnUI(parkingBlockId, x, y, width, height, parkingBlockName, StorageID) {
        new OldRectangle(parkingBlockId, parseInt(x), parseInt(y), parseInt(width), parseInt(height), parkingBlockName, StorageID);
    }
    /** end - parkingBlock operations **/

    function onUploadFile(id) {
        // virtually trigger input file button
        $(id).trigger('click');
    }

    // upload SVG map file
    function uploadSVG(obj) {
        var err_logo_filetype = "只能上傳 svg 檔";
        if (obj.files[0].type.substr(0, 9) != "image/svg") {
            alert(err_logo_filetype);
            return;
        }

        $('#mapProgress').css('width', '0%').html('0%');
        var formData = new FormData();
        formData.append('upload', obj.files[0]);
        ajaxUploadFile("@Url.Content("~/Field/UploadMap?FieldID=")@Model.FieldMap.FieldID", formData, "map");
    };

    function ajaxUploadFile(url, formData, type) {
        $.ajax({
            url: url,
            type: 'POST',
            contentType: false,
            processData: false,
            cache: false,
            data: formData,
            dataType: 'json', // return JSON datatype
            xhr: function () {  // Custom XMLHttpRequest
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) { // Check if upload property exists
                    if (type == 'map') {
                        // show progress bar when uploading field map
                        myXhr.upload.addEventListener('progress', function (e) {
                            var progress = parseInt(e.loaded / e.total * 100, 10);
                            //console.log("Value = "+e.loaded +" :: Max ="+e.total);
                            $('#mapProgress').css('width', progress + '%').html(progress + '%');
                        }, false); // For handling the progress of the upload
                    } else {
                        // show progress bar when uploading photo, 'progress' is reserve word, do not change it
                        myXhr.upload.addEventListener('progress', function (e) {
                            var progress = parseInt(e.loaded / e.total * 100, 10);
                            $('#photoProgress').css('width', progress + '%').html(progress + '%');
                        }, false); // For handling the progress of the upload
                    }
                }
                return myXhr;
            }
        }).done(function (data) {
            //alert(data.mapName);
            if (type == 'map') {
                // update map
                loadMap('@Url.Content("~/Media/Map/")' + data.mapName);
                //$('#mapProgress').fadeOut('slow');
            } else {
                // update image
                $('#photo').attr('src', '@Url.Content("~/media/field")' + data.photoName + '?timestamp=' + new Date().getTime());
                $('#photoProgress').fadeOut('slow');
            }
        }).fail(function () {
            alert("Sorry. Server unavailable. ");
        });
    };


    // add mouse event to field map
    function addMapMouseEvent() {
        var pressTimer;
        $('svg').mouseup(function(event) {
            // Clear timeout
            clearTimeout(pressTimer);
            //return false;
        }).mousedown(function(evt) {
            reset();
            // Set timeout 1 second to add one beacon circle
            pressTimer = setTimeout(function() {
                //console.log(dragBeacon);
                if (!dragBeacon) {
                    var parentOffset = $('#fieldMap').offset();
                    var relX = evt.pageX - parentOffset.left;
                    var relY = evt.pageY - parentOffset.top;
                    switch (mapToolbarMenuSelected) {
                        case 2:
                            // add receiver beacon
                            addBeaconToServer(1, relX, relY);
                            break;
                    }
                }
            }, 1000); // long press 1 second
            //return false;
        });
    }

    // create layer on map
    function createMapLayer() {
        var g = document.createElementNS('http://www.w3.org/2000/svg','g');
        g.setAttributeNS(null, 'id', 'parkingBlock_g');
        $('svg').append(g);

        var g = document.createElementNS('http://www.w3.org/2000/svg','g');
        g.setAttributeNS(null, 'id', 'beacon');
        $('svg').append(g);
    }

    function createMapObject() {
        // ** map operations **
        // create map layers
        createMapLayer();
        // add mouse event to map
        addMapMouseEvent();

        // create parking blocks
        @foreach (var item in (List<CST_STORAGE_PARKINGBLOCK>)Model.ParkingBlockList)
        {
            @:addParkingBlockOnUI('@item.ParkingBlockID', '@item.X', '@item.Y', '@item.Width', '@item.Height', '@item.ParkingBlockName', '@item.StorageID');
                                                }
    };

    // load a field map SVG
    function loadMap(mapName) {
        $('#fieldMap').load(mapName, status, function() {
            if ( status != 'error' ) {
                svg = d3.select('svg');
                createMapObject();
            }
        });
    }

    // set xeditable in line, not popup
    $.fn.editable.defaults.mode = 'inline';

    $(document).ready(function () {
        // x-editable for field attribute change
        $('#FieldName, #Description').editable({
            ajaxOptions: {
                dataType: 'json' //assuming json response
            },
            success: function (response, newValue) {
                // change update time
                $('#LastUpdateTime').html(response['Result'].LastUpdateTime);
            }
        });
        setParkingBlockIdEditable();

        @if(Model.FieldMap.MapName!="")
        {
            @:loadMap("@Url.Content("~/Media/Map/")@Model.FieldMap.MapName");
        }

        // get modal result
        $('#myModal .modal-footer button').on('click', function (e) {
            var $target = $(e.target);
            if ($target.index() == 1) {
                deleteBeaconFromServer();
            }
        });
    });
</script>

<div class="wrapper">
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h1>圖資管理<small>場域編輯</small></h1>
            <ol class="breadcrumb">
                @*<li><a href="#"><i class="fa fa-dashboard"></i>Home</a></li>
                <li class="active">Dashboard</li>*@
            </ol>
        </section>
        <!-- Main content -->
        <section class="content">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- general form elements -->
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h3 class="box-title">編輯場域</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <table id="projectTable" class="table table-striped table-hover table-bordered" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th class="col-md-2">屬性</th>
                                        <th class="col-md-10">設定值</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr><td>場域名稱</td><td><a href="#" id="FieldName" data-type="text" data-pk="@Model.FieldMap.FieldID" data-url="@Url.Action("Update")" data-title="輸入場域名稱">@Model.FieldMap.FieldName</a></td></tr>
                                    @*<tr><td>版本編號</td><td><a href="#" id="Version" data-type="text" data-pk="@Model.FieldMap.FieldID" data-url="@Url.Action("Update")" data-title="輸入版本編號">@Model.FieldMap.Version</a></td></tr>*@
                                    <tr><td>場域說明</td><td><a href="#" id="Description" data-type="textarea" data-pk="@Model.FieldMap.FieldID" data-url="@Url.Action("Update")" data-title="輸入場域說明">@Model.FieldMap.Description</a></td></tr>
                                    <tr>
                                        <td>
                                            場域地圖<input id="svgUpload" type='file' onchange="uploadSVG(this)" style="display: none"><button class="btn btn-sm btn-success" onclick="onUploadFile('#svgUpload')"><i class="fa fa-map"></i> 上傳地圖</button>
                                            <p>
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="box box-primary">
                                                            <div class="box-header with-border">
                                                                <h3 class="box-title">圖層</h3>
                                                            </div>
                                                            <div class="checkbox">
                                                                <label>
                                                                    <input type="checkbox" onclick="switchParkingBlockLayer()" checked>棧板放置區塊
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="parkingBlockPanel" class="row" style="display: none;">
                                                    <div class="col-md-12">
                                                        <div class="box box-primary">
                                                            <div class="box-header with-border">
                                                                <h3 class="box-title">儲位區塊名稱</h3>
                                                            </div>
                                                            <div class="checkbox">
                                                                <label>
                                                                    <a href="#" id="ParkingBlockName" data-type="text" data-pk="@Model.FieldMap.FieldID" data-url='@Url.Action("Update", "ParkingBlock")' data-title="輸入儲位區塊名稱"></a>
                                                                </label>
                                                            </div>
                                                            <div class="box-header with-border">
                                                                <h3 class="box-title">儲位區塊編號</h3>
                                                            </div>
                                                            <div class="checkbox">
                                                                <label>
                                                                    <a href="#" id="StorageID" data-type="text" data-pk="@Model.FieldMap.FieldID" data-url='@Url.Action("Update", "ParkingBlock")' data-title="輸入儲位區塊編號"></a>
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </p>
                                        </td>
                                        <td>
                                            <div class="progress" style="margin-bottom: 10px;">
                                                <div id="mapProgress" class="progress-bar progress-bar-success progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                                            </div>
                                            <div class="btn-group">
                                                <button class="btn btn-sm btn-primary" type="button" onclick="setMapToolbarMenu(0)" autofocus="true"><i class="fa fa-mouse-pointer"></i></button>
                                            </div>
                                            <div class="btn-group">
                                                <button id="deleteButton" class="btn btn-sm btn-danger" type="button" onclick="deleteObject()"><i class="glyphicon glyphicon-remove"></i> 刪除</button>
                                            </div>
                                            <div class="btn-group">
                                                <button id="menuParkingBLock" class="btn btn-sm btn-primary" onclick="setMapToolbarMenu(1)"><i class="fa parkingBlockIcon"></i> 棧板放置區塊</button>
                                            </div>
                                            <p>
                                                <div id="fieldMap"></div>
                                            </p>
                                        </td>
                                    </tr>
                                    <tr><td>建立時間</td><td>@Model.FieldMap.CreateTime</td></tr>
                                    <tr><td>最新異動時間</td><td id="LastUpdateTime">@Model.FieldMap.LastUpdateTime</td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div><!-- /.box -->
                </div>
            </div>
        </section><!-- /.content -->
    </div><!-- /.content-wrapper -->
</div><!-- ./wrapper -->